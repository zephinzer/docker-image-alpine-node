#!/bin/bash

## <TEST_DIR>
TEST_DIR=$(dirname $0)/..;
if [[ $1 = "" ]]; then
  printf "\n\033[31m[ERR] Specify a project folder as the first argument\033[0m\n\n";
  exit 1;
fi;
## </TEST_DIR>

## <CODENAME_VERSION>
CODENAME_VERSION=$2;
CODENAME_VERSION_KEY="__IMAGE_TAG__";
if [[ $CODENAME_VERSION = "" ]]; then
  printf "\n\033[31m[ERR] Specify a Node codename as the second argument.\033[0m\n\n";
  exit 1;
fi;
## </CODENAME_VERSION>

## <PROJ_DIR>
PROJ_DIR=${TEST_DIR}/$1;
$(stat ${PROJ_DIR} &>/dev/null)
if [[ $? != "0" ]]; then
  printf "\n\033[31m[ERR] The specified project folder at '${PROJ_DIR}' does not exist.\033[0m\n\n";
  exit 1;
fi;
## </PROJ_DIR>

## <EXTRA_APK_DEPENDENCIES>
$(cat ${PROJ_DIR}/.extra-apk-dependencies &>/dev/null);
if [[ $? != "0" ]]; then
  printf "\n\033[31m[ERR] '${PROJ_DIR}/.extra-apk-dependencies' does not exist. Define it with a single line of additional APK dependencies needed to make this test case work!\033[0m\n\n";
  exit 1;
fi;
EXTRA_APK_DEPENDENCIES=$(cat ${PROJ_DIR}/.extra-apk-dependencies);
EXTRA_APK_DEPENDENCIES_KEY="__EXTRA_APK_DEPENDENCIES__";
## </EXTRA_APK_DEPENDENCIES>

## <generate_dockerfile>
function generate_dockerfile {
  printf "PROJ_DIR                   : $1\n"
  PROJ_DIR=$1;
  printf "EXTRA_APK_DEPENDENCIES_KEY : $2\n"
  EXTRA_APK_DEPENDENCIES_KEY=$2;
  printf "EXTRA_APK_DEPENDENCIES     : $3\n"
  EXTRA_APK_DEPENDENCIES=$3;
  printf "IMAGE_TAG_KEY              : $4\n"
  IMAGE_TAG_KEY=$4;
  printf "TAG_NAME                   : $5\n"
  TAG_NAME=$5;
  sed \
    -e "s|$IMAGE_TAG_KEY|$TAG_NAME|g" \
    -e "s|$EXTRA_APK_DEPENDENCIES_KEY|$EXTRA_APK_DEPENDENCIES|g" \
    "${PROJ_DIR}/.Dockerfile" > "${PROJ_DIR}/$TAG_NAME.Dockerfile";
  printf "Created '${PROJ_DIR}/$TAG_NAME.Dockerfile'... with contents: \n";
  cat ${PROJ_DIR}/$TAG_NAME.Dockerfile;
};
export -f generate_dockerfile;
## </generate_dockerfile>

## create the necessary files from the .Dockerfile template
$(stat ${PROJ_DIR}/.Dockerfile &>/dev/null);
if [[ $? != "0" ]]; then
  printf "\n\033[31m[ERR] The template Dockerfile at '${PROJ_DIR}/.Dockerfile' does not exist. Define it so that this script can setup the relevant Dockerfiles.\033[0m\n\n";
  exit 1;
fi;

generate_dockerfile ${PROJ_DIR} ${EXTRA_APK_DEPENDENCIES_KEY} "\"${EXTRA_APK_DEPENDENCIES}\"" ${CODENAME_VERSION_KEY} ${CODENAME_VERSION};
